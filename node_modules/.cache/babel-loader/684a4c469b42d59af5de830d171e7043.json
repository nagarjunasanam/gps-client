{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"SignUp\");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" | \");\n\nconst _hoisted_3 = {\n  key: 0\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Sign up\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_router_link, {\n    to: \"/signin\"\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_2, _createCommentVNode(\" <p>User view</p> \"), _ctx.formState.signup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formState.username = $event),\n    placeholder: \"username\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.formState.password = $event),\n    placeholder: \"password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.Signup && _ctx.Signup(...args))\n  }, \"Sign UP\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;iDAI8B;;iDAAoB;;;;;;gCAI1CA,oBAAc,GAAd,EAAc,IAAd,EAAG,SAAH,EAAU;AAAA;AAAV;;;;;uBALJC,oBAYM,KAZN,EAYM,IAZN,EAYM,CAXNC,aAA8CC,sBAA9C,EAA8C;IAAjCC,EAAE,EAAC;EAA8B,CAA9C,EAAyB;sBAAC,MAAM,aAAP;;;;EAAA,CAAzB,CAWM,cATJC,yCASI,EAROC,eAAUC,wBAArBN,oBAMM,KANN,EAMMO,UANN,EAMM,CALJC,UAKI,kBAJJT,oBAA6D,OAA7D,EAA6D;+DAA7CM,eAAUI,WAAQC,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA7D;;EAAA,kBAAgBN,eAAUI,WAItB,kBAHJV,oBAA6D,OAA7D,EAA6D;+DAA7CM,eAAUO,WAAQF,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA7D;;EAAA,kBAAgBN,eAAUO,WAGtB,EADJb,oBAAwC,QAAxC,EAAwC;IAA/Bc,OAAK,yCAAER,mCAAF;EAA0B,CAAxC,EAAwB,SAAxB,CACI,CANN,sCAQI,CAZN","names":["_createElementVNode","_createElementBlock","_createVNode","_component_router_link","to","_createCommentVNode","_ctx","signup","_hoisted_3","_hoisted_4","username","$event","placeholder","password","onClick"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\views\\SignUp.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div>\r\n    <router-link to=\"/signin\">SignUp</router-link> |\r\n\r\n      <!-- <p>User view</p> -->\r\n      <div v-if=\"formState.signup\">\r\n        <p>Sign up</p>\r\n        <input v-model=\"formState.username\" placeholder=\"username\" />\r\n        <input v-model=\"formState.password\" placeholder=\"password\" />\r\n  \r\n        <button @click=\"Signup\">Sign UP</button>\r\n      </div>\r\n      \r\n    </div>\r\n  </template>\r\n      \r\n      <script>\r\n  import { defineComponent, reactive, onMounted } from \"vue\";\r\n  \r\n  import Parse from \"parse\";\r\n  \r\n  export default defineComponent({\r\n    components: {},\r\n    setup() {\r\n      const formState = reactive({\r\n        username: \"\",\r\n        password: \"\",\r\n        username1: \"\",\r\n        password1: \"\",\r\n        signup: true,\r\n        signin: true,\r\n        logout: true,\r\n        show: true\r\n      });\r\n      const Signup = async () => {\r\n        const user = new Parse.User();\r\n        user.set(\"username\", formState.username);\r\n        user.set(\"password\", formState.password);\r\n  \r\n        // other fields can be set just like with Parse.Object\r\n  \r\n        try {\r\n          await user.signUp().then(() => {\r\n            alert(\"user created\");\r\n            (formState.username = \"\"), (formState.password = \"\");\r\n            location.reload();\r\n          });\r\n          // Hooray! Let them use the app now.\r\n        } catch (error) {\r\n          // Show the error message somewhere and let the user try again.\r\n          alert(\"Error: \" + error.code + \" \" + error.message);\r\n        }\r\n      };\r\n  \r\n\r\n   \r\n  \r\n      onMounted(() => {\r\n      \r\n      });\r\n  \r\n      return { formState,Signup  };\r\n    }\r\n  });\r\n  </script>\r\n      "]},"metadata":{},"sourceType":"module"}