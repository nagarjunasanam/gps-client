{"ast":null,"code":"import { defineComponent, reactive, onMounted } from \"vue\";\nimport { Loader } from 'google-maps';\nimport { GoogleMap, Marker } from \"vue3-google-map\";\nimport { json } from \"body-parser\"; // import Parse from 'parse'\n\nexport default defineComponent({\n  component: {\n    Loader,\n    GoogleMap,\n    Marker\n  },\n\n  setup() {\n    const formState = reactive({\n      image: \"\",\n      center: null\n    });\n    onMounted(async () => {\n      // or const {Loader} = require('google-maps'); without typescript\n      // const options: LoaderOptions = {/* todo */};\n      const loader = new Loader('AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4', {});\n      const google = await loader.load();\n\n      if (navigator.geolocation) {\n        console.log(\"hello\");\n        navigator.geolocation.watchPosition(position => {\n          console.log(JSON.parse(position));\n          var point = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          console.log(point);\n          var map = new google.maps.Map(document.getElementById('map'), {\n            zoom: 15,\n            center: point,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n          }); // console.log(map)\n\n          new google.maps.Marker({\n            position: point,\n            map: map\n          });\n        });\n      }\n    });\n    return {\n      formState\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAaA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,KAArD;AACA,SAAQC,MAAR,QAAqB,aAArB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,iBAAlC;AACA,SAASC,IAAT,QAAqB,aAArB,C,CAGA;;AAEA,eAAeN,eAAe,CAAC;EAC7BO,SAAS,EAAC;IACRJ,MADQ;IAERC,SAFQ;IAGRC;EAHQ,CADmB;;EAO7BG,KAAK,GAAG;IACN,MAAMC,SAAQ,GAAIR,QAAQ,CAAC;MACzBS,KAAK,EAAE,EADkB;MAEzBC,MAAM,EAAC;IAFkB,CAAD,CAA1B;IAIAT,SAAS,CAAC,YAAY;MAC1B;MAEA;MACA,MAAMU,MAAK,GAAI,IAAIT,MAAJ,CAAW,yCAAX,EAAsD,EAAtD,CAAf;MAEA,MAAMU,MAAK,GAAI,MAAMD,MAAM,CAACE,IAAP,EAArB;;MAGM,IAAIC,SAAS,CAACC,WAAd,EAA2B;QACzBC,OAAO,CAACC,GAAR,CAAY,OAAZ;QACAH,SAAS,CAACC,WAAV,CAAsBG,aAAtB,CAAoCC,QAAO,IAAK;UAC9CH,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAZ;UACA,IAAIG,KAAI,GAAI,IAAIV,MAAM,CAACW,IAAP,CAAYC,MAAhB,CACVL,QAAQ,CAACM,MAAT,CAAgBC,QADN,EAEVP,QAAQ,CAACM,MAAT,CAAgBE,SAFN,CAAZ;UAIAX,OAAO,CAACC,GAAR,CAAYK,KAAZ;UACA,IAAIM,GAAE,GAAI,IAAIhB,MAAM,CAACW,IAAP,CAAYM,GAAhB,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,EAAoD;YAC3DC,IAAI,EAAE,EADqD;YAE5DtB,MAAM,EAAEY,KAFoD;YAG5DW,SAAS,EAAErB,MAAM,CAACW,IAAP,CAAYW,SAAZ,CAAsBC;UAH2B,CAApD,CAAV,CAP8C,CAY9C;;UACA,IAAIvB,MAAM,CAACW,IAAP,CAAYnB,MAAhB,CAAuB;YACrBe,QAAQ,EAAEG,KADW;YAErBM,GAAG,EAAEA;UAFgB,CAAvB;QAID,CAjBD;MAkBF;IACD,CA9BQ,CAAT;IAgCA,OAAO;MACLpB;IADK,CAAP;EAGF;;AA/C6B,CAAD,CAA9B","names":["defineComponent","reactive","onMounted","Loader","GoogleMap","Marker","json","component","setup","formState","image","center","loader","google","load","navigator","geolocation","console","log","watchPosition","position","JSON","parse","point","maps","LatLng","coords","latitude","longitude","map","Map","document","getElementById","zoom","mapTypeId","MapTypeId","ROADMAP"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <p>AIzaSyBItZDFpGCcIYt2HxahOQ4XnY8tn2dDn40</p>\n    <p>hello</p>\n    <div id=\"map\"></div>\n\n    <p>nn</p>\n    <GoogleMap api-key=\"AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4\" style=\"width: 100%; height: 500px\" :center=\"center\" :zoom=\"15\">\n      <Marker :options=\"{ position: center }\" />\n    </GoogleMap>\n  </div>\n</template>\n<script>\nimport { defineComponent, reactive, onMounted } from \"vue\";\nimport {Loader} from 'google-maps';\nimport { GoogleMap, Marker } from \"vue3-google-map\";\nimport { json } from \"body-parser\";\n\n\n// import Parse from 'parse'\n\nexport default defineComponent({\n  component:{\n    Loader,\n    GoogleMap, \n    Marker\n    \n  },\n  setup() {\n    const formState = reactive({\n      image: \"\",\n      center:null\n    });\n    onMounted(async () => {\n// or const {Loader} = require('google-maps'); without typescript\n \n// const options: LoaderOptions = {/* todo */};\nconst loader = new Loader('AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4', {});\n \nconst google = await loader.load();\n\n\n      if (navigator.geolocation) {\n        console.log(\"hello\");\n        navigator.geolocation.watchPosition(position => {\n          console.log(JSON.parse(position));\n          var point = new google.maps.LatLng(\n            position.coords.latitude,\n            position.coords.longitude\n          );\n          console.log(point)\n          var map = new google.maps.Map(document.getElementById('map'), {\n             zoom: 15,\n            center: point,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n          });\n          // console.log(map)\n          new google.maps.Marker({\n            position: point,\n            map: map\n          });\n        });\n      }\n    });\n\n    return {\n      formState\n    };\n  }\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}