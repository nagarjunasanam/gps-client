{"ast":null,"code":"import { defineComponent, reactive, onMounted } from \"vue\"; // import {Loader} from 'google-maps';\n\nimport { Loader } from '@googlemaps/js-api-loader'; // import Parse from 'parse'\n\nexport default defineComponent({\n  component: {},\n\n  setup() {\n    const formState = reactive({\n      image: \"\",\n      center: null\n    });\n    onMounted(async () => {\n      // or const {Loader} = require('google-maps'); without typescript\n      // const options: LoaderOptions = {/* todo */};\n      // const loader = new Loader('AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4', {});\n      const loader = new Loader({\n        apiKey: \"AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4\"\n      });\n      await loader.load().then(async google => {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(\"position\", position);\n            var point = new google.maps.LatLng(position.coords.latitude, position.coords.longitude); // Initialize the Google Maps API v3\n\n            var map = new google.maps.Map(document.getElementById('map'), {\n              zoom: 15,\n              center: point,\n              mapTypeId: google.maps.MapTypeId.ROADMAP\n            }); // Place a marker\n\n            new google.maps.Marker({\n              position: point,\n              map: map\n            });\n          });\n        } else {\n          alert('W3C Geolocation API is not available');\n        }\n      });\n    });\n    return {\n      formState\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAWA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,KAArD,C,CACA;;AACA,SAASC,MAAT,QAAuB,2BAAvB,C,CAKA;;AAEA,eAAeH,eAAe,CAAC;EAC7BI,SAAS,EAAC,EADmB;;EAM7BC,KAAK,GAAG;IACN,MAAMC,SAAQ,GAAIL,QAAQ,CAAC;MACzBM,KAAK,EAAE,EADkB;MAEzBC,MAAM,EAAC;IAFkB,CAAD,CAA1B;IAIAN,SAAS,CAAC,YAAY;MAC1B;MAEA;MAEA;MACA,MAAMO,MAAK,GAAI,IAAIN,MAAJ,CAAW;QACxBO,MAAM,EAAE;MADgB,CAAX,CAAf;MAKC,MAAMD,MAAM,CAACE,IAAP,GAAcC,IAAd,CAAmB,MAAMC,MAAN,IAAe;QACvC,IAAIC,SAAS,CAACC,WAAd,EAA2B;UACrBD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;YACxDC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,QAAvB;YAEF,IAAIG,KAAI,GAAI,IAAIP,MAAM,CAACQ,IAAP,CAAYC,MAAhB,CAAuBL,QAAQ,CAACM,MAAT,CAAgBC,QAAvC,EACuBP,QAAQ,CAACM,MAAT,CAAgBE,SADvC,CAAZ,CAH0D,CAO1D;;YACA,IAAIC,GAAE,GAAI,IAAIb,MAAM,CAACQ,IAAP,CAAYM,GAAhB,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,EAAoD;cAC3DC,IAAI,EAAE,EADqD;cAE5DtB,MAAM,EAAEY,KAFoD;cAG5DW,SAAS,EAAElB,MAAM,CAACQ,IAAP,CAAYW,SAAZ,CAAsBC;YAH2B,CAApD,CAAV,CAR0D,CAc1D;;YACA,IAAIpB,MAAM,CAACQ,IAAP,CAAYa,MAAhB,CAAuB;cACrBjB,QAAQ,EAAEG,KADW;cAErBM,GAAG,EAAEA;YAFgB,CAAvB;UAID,CAnBD;QAoBF,CArBJ,MAsBS;UACHS,KAAK,CAAC,sCAAD,CAAL;QACF;MACJ,CA1BK,CAAN;IA8BI,CAzCQ,CAAT;IA2CA,OAAO;MACL7B;IADK,CAAP;EAGF;;AAzD6B,CAAD,CAA9B","names":["defineComponent","reactive","onMounted","Loader","component","setup","formState","image","center","loader","apiKey","load","then","google","navigator","geolocation","getCurrentPosition","position","console","log","point","maps","LatLng","coords","latitude","longitude","map","Map","document","getElementById","zoom","mapTypeId","MapTypeId","ROADMAP","Marker","alert"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <p>AIzaSyBItZDFpGCcIYt2HxahOQ4XnY8tn2dDn40</p>\n    <p>hello</p>\n    <div id=\"map\"></div>\n\n    <p>nn</p>\n   \n  </div>\n</template>\n<script>\nimport { defineComponent, reactive, onMounted } from \"vue\";\n// import {Loader} from 'google-maps';\nimport { Loader } from '@googlemaps/js-api-loader';\n\n\n\n\n// import Parse from 'parse'\n\nexport default defineComponent({\n  component:{\n   \n\n    \n  },\n  setup() {\n    const formState = reactive({\n      image: \"\",\n      center:null\n    });\n    onMounted(async () => {\n// or const {Loader} = require('google-maps'); without typescript\n \n// const options: LoaderOptions = {/* todo */};\n\n// const loader = new Loader('AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4', {});\nconst loader = new Loader({\n  apiKey: \"AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4\",\n\n});\n \n await loader.load().then(async(google)=>{\n  if (navigator.geolocation) { \n        navigator.geolocation.getCurrentPosition(function(position) {  \n            console.log(\"position\",position)\n      \n          var point = new google.maps.LatLng(position.coords.latitude, \n                                             position.coords.longitude);\n                                             \n      \n          // Initialize the Google Maps API v3\n          var map = new google.maps.Map(document.getElementById('map'), {\n             zoom: 15,\n            center: point,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n          });\n      \n          // Place a marker\n          new google.maps.Marker({\n            position: point,\n            map: map\n          });\n        }); \n      } \n      else {\n        alert('W3C Geolocation API is not available');\n      } \n });\n\n\n      \n    });\n\n    return {\n      formState\n    };\n  }\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}