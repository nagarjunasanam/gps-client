{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <p>User view</p> \"), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.Logout && _ctx.Logout(...args))\n  }, \"Logout\")])]);\n}","map":{"version":3,"mappings":";;uBAGEA,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJC,yCAMI,EAHJC,oBAEM,KAFN,EAEM,IAFN,EAEM,CADJA,oBAAuC,QAAvC,EAAuC;IAA9BC,OAAK,yCAAEC,mCAAF;EAAyB,CAAvC,EAAwB,QAAxB,CACI,CAFN,CAGI,CAPN","names":["_createElementBlock","_createCommentVNode","_createElementVNode","onClick","_ctx"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\SignOut.vue"],"sourcesContent":["\r\n\r\n<template>\r\n  <div>\r\n    <!-- <p>User view</p> -->\r\n    \r\n    \r\n    <div >\r\n      <button @click=\"Logout\">Logout</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n    \r\n    <script>\r\nimport { defineComponent, reactive, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\n\r\nimport Parse from \"parse\";\r\n\r\nexport default defineComponent({\r\n  components: {},\r\n  setup() {\r\n    const router = useRouter()\r\n    const formState = reactive({\r\n      username: \"\",\r\n      password: \"\",\r\n      username1: \"\",\r\n      password1: \"\",\r\n      signup: true,\r\n      signin: true,\r\n      logout: true,\r\n      show: true\r\n    });\r\n  \r\n    const Logout = async() => {\r\n      const currentUser = Parse.User.current();\r\n      currentUser.set({\r\n        'state':false\r\n      })\r\n\r\n      await currentUser.save()\r\n      var ldata = currentUser.get(\"userLocation\");\r\n      console.log(ldata)\r\n      // console.log(ldata.pop())\r\n\r\n      var data=[]\r\n      if(ldata){\r\n        var len = ldata.length\r\n   \r\n      }\r\n      console.log(\"LLLLLLLLLLLLLLLLLL\",len)\r\n     if(len>=0){\r\n      if(len>=1){\r\n      var  myTarget = JSON.parse(JSON.stringify(ldata[len-1]))\r\n\r\n      }\r\n      else {\r\n       myTarget = JSON.parse(JSON.stringify(ldata[0]))\r\n\r\n      }\r\n     }\r\n      // console.log(\"len\",len)\r\n      // console.log(\"mytar\",myTarget)\r\n      data.push(myTarget)\r\n      // console.log(data)\r\n      // console.log(data)\r\n      \r\n      currentUser.set({\r\n        'userLocation': data,\r\n        'logout':true\r\n      });\r\n     await  currentUser.save()\r\n\r\n      Parse.User.logOut().then(() => {\r\n        alert(\"user logged out\");\r\n        location.reload();\r\n\r\n        router.push('/')\r\n\r\n        //   const currentUser = Parse.User.current();  // this will now be null\r\n      });\r\n    };\r\n\r\n    onMounted(() => {\r\n     \r\n    });\r\n\r\n    return { formState, Logout };\r\n  }\r\n});\r\n</script>\r\n    "]},"metadata":{},"sourceType":"module"}