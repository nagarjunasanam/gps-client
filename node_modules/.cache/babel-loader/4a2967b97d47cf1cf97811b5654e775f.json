{"ast":null,"code":"import { defineComponent, reactive, onMounted } from \"vue\";\nimport Parse from \"parse\";\nexport default defineComponent({\n  components: {},\n\n  setup() {\n    const formState = reactive({\n      username: \"\",\n      password: \"\"\n    });\n\n    const Signup = async () => {\n      const user = new Parse.User();\n      user.set(\"username\", formState.username);\n      user.set(\"password\", formState.password); // other fields can be set just like with Parse.Object\n\n      try {\n        await user.signUp().then(() => {\n          alert(\"user created\");\n          formState.username = '', formState.password = '';\n        }); // Hooray! Let them use the app now.\n      } catch (error) {\n        // Show the error message somewhere and let the user try again.\n        alert(\"Error: \" + error.code + \" \" + error.message);\n      }\n    };\n\n    const Signin = async () => {\n      await Parse.User.logIn(formState.username, formState.password).then(() => {\n        alert(\"user sign in success\");\n      });\n    };\n\n    onMounted(() => {});\n    return {\n      formState,\n      Signup,\n      Signin\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAsBA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,KAArD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAeH,eAAe,CAAC;EAC7BI,UAAU,EAAE,EADiB;;EAE7BC,KAAK,GAAG;IACN,MAAMC,SAAQ,GAAIL,QAAQ,CAAC;MACzBM,QAAQ,EAAE,EADe;MAEzBC,QAAQ,EAAE;IAFe,CAAD,CAA1B;;IAIA,MAAMC,MAAK,GAAI,YAAY;MACzB,MAAMC,IAAG,GAAI,IAAIP,KAAK,CAACQ,IAAV,EAAb;MACAD,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBN,SAAS,CAACC,QAA/B;MACAG,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBN,SAAS,CAACE,QAA/B,EAHyB,CAKzB;;MAEA,IAAI;QACF,MAAME,IAAI,CAACG,MAAL,GAAcC,IAAd,CAAmB,MAAI;UAACC,KAAK,CAAC,cAAD,CAAL;UAC9BT,SAAS,CAACC,QAAV,GAAmB,EAAnB,EACAD,SAAS,CAACE,QAAV,GAAmB,EADnB;QAEH,CAHS,CAAN,CADE,CAKF;MACF,CANA,CAME,OAAOQ,KAAP,EAAc;QACd;QACAD,KAAK,CAAC,YAAYC,KAAK,CAACC,IAAlB,GAAyB,GAAzB,GAA+BD,KAAK,CAACE,OAAtC,CAAL;MACF;IACD,CAjBD;;IAmBA,MAAMC,MAAK,GAAI,YAAS;MACpB,MAAMhB,KAAK,CAACQ,IAAN,CAAWS,KAAX,CAAiBd,SAAS,CAACC,QAA3B,EAAqCD,SAAS,CAACE,QAA/C,EAAyDM,IAAzD,CAA8D,MAAI;QACpEC,KAAK,CAAC,sBAAD,CAAL;MACH,CAFK,CAAN;IAIJ,CALA;;IAOAb,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT;IAEA,OAAO;MAAEI,SAAF;MAAaG,MAAb;MAAoBU;IAApB,CAAP;EACF;;AApC6B,CAAD,CAA9B","names":["defineComponent","reactive","onMounted","Parse","components","setup","formState","username","password","Signup","user","User","set","signUp","then","alert","error","code","message","Signin","logIn"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\UserView.vue"],"sourcesContent":["\r\n\r\n<template>\r\n  <div>\r\n    <p>User view</p>\r\n    <div>\r\n      <input v-model=\"formState.username\" placeholder=\"username\" />\r\n      <input v-model=\"formState.password\" placeholder=\"password\" />\r\n\r\n      <button @click=\"Signup\">Sign UP</button>\r\n    </div>\r\n    <div>\r\n        <p>Sign In</p>\r\n        <input v-model=\"formState.username\" placeholder=\"username\" />\r\n        <input v-model=\"formState.password\" placeholder=\"password\" />\r\n  \r\n        <button @click=\"Signin\">Sign In</button>\r\n      </div>\r\n  </div>\r\n</template>\r\n    \r\n    <script>\r\nimport { defineComponent, reactive, onMounted } from \"vue\";\r\n\r\nimport Parse from \"parse\";\r\n\r\nexport default defineComponent({\r\n  components: {},\r\n  setup() {\r\n    const formState = reactive({\r\n      username: \"\",\r\n      password: \"\"\r\n    });\r\n    const Signup = async () => {\r\n      const user = new Parse.User();\r\n      user.set(\"username\", formState.username);\r\n      user.set(\"password\", formState.password);\r\n\r\n      // other fields can be set just like with Parse.Object\r\n\r\n      try {\r\n        await user.signUp().then(()=>{alert(\"user created\")\r\n        formState.username='',\r\n        formState.password=''\r\n    });\r\n        // Hooray! Let them use the app now.\r\n      } catch (error) {\r\n        // Show the error message somewhere and let the user try again.\r\n        alert(\"Error: \" + error.code + \" \" + error.message);\r\n      }\r\n    };\r\n\r\n    const Signin = async()=>{\r\n        await Parse.User.logIn(formState.username, formState.password).then(()=>{\r\n            alert(\"user sign in success\")\r\n        });\r\n\r\n    }\r\n\r\n    onMounted(() => {});\r\n\r\n    return { formState, Signup,Signin };\r\n  }\r\n});\r\n</script>\r\n    "]},"metadata":{},"sourceType":"module"}