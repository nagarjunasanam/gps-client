{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Image\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_2);\n}","map":{"version":3,"mappings":";;gCAEAA,oBAAY,GAAZ,EAAY,IAAZ,EAAG,OAAH,EAAQ;AAAA;AAAR;;oBAAAC;;uBADEC,oBAEM,KAFN,EAEM,IAFN,EAEMC,UAFN","names":["_createElementVNode","_hoisted_1","_createElementBlock","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n<p>Image</p>\n  </div>\n</template>\n<script>\nimport { defineComponent,onMounted ,reactive} from 'vue'\nimport Parse from 'parse'\n\nexport default defineComponent({\n  setup() {\n    const formState = reactive({\n      image:''\n    })\n    onMounted( async()=>{\n      const query = new Parse.Query(\"AddCrew\");\n      query.equalTo('objectId',\"j0r5jE2hzf\")\n      var results = await query.find()\n    console.log(results)\n    for(const obj of results){\n      var img = obj.get('img')\n      console.log(img)\n      formState.image=img\n    }\n    })\n    return{\n      formState\n    }\n  },\n \n})\n</script>\n"]},"metadata":{},"sourceType":"module"}