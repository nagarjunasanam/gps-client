{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, reactive, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport Parse from \"parse\";\nexport default defineComponent({\n  components: {},\n\n  setup() {\n    const router = useRouter();\n    const formState = reactive({\n      username: \"\",\n      password: \"\",\n      username1: \"\",\n      password1: \"\",\n      signup: true,\n      signin: true,\n      logout: true,\n      show: true\n    });\n\n    const Signup = async () => {\n      const user = new Parse.User();\n      user.set(\"username\", formState.username);\n      user.set(\"password\", formState.password); // other fields can be set just like with Parse.Object\n\n      try {\n        await user.signUp().then(() => {\n          alert(\"user created\");\n          formState.username = \"\", formState.password = \"\"; // location.reload();\n\n          router.push('/signin');\n        }); // Hooray! Let them use the app now.\n      } catch (error) {\n        // Show the error message somewhere and let the user try again.\n        alert(\"Error: \" + error.code + \" \" + error.message);\n      }\n    };\n\n    onMounted(() => {});\n    return {\n      formState,\n      Signup\n    };\n  }\n\n});","map":{"version":3,"mappings":";AAqBE,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,KAArD;AACF,SAASC,SAAT,QAA0B,YAA1B;AAEE,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAeJ,eAAe,CAAC;EAC7BK,UAAU,EAAE,EADiB;;EAE7BC,KAAK,GAAG;IACJ,MAAMC,MAAK,GAAIJ,SAAS,EAAxB;IACF,MAAMK,SAAQ,GAAIP,QAAQ,CAAC;MACzBQ,QAAQ,EAAE,EADe;MAEzBC,QAAQ,EAAE,EAFe;MAGzBC,SAAS,EAAE,EAHc;MAIzBC,SAAS,EAAE,EAJc;MAKzBC,MAAM,EAAE,IALiB;MAMzBC,MAAM,EAAE,IANiB;MAOzBC,MAAM,EAAE,IAPiB;MAQzBC,IAAI,EAAE;IARmB,CAAD,CAA1B;;IAUA,MAAMC,MAAK,GAAI,YAAY;MACzB,MAAMC,IAAG,GAAI,IAAId,KAAK,CAACe,IAAV,EAAb;MACAD,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBZ,SAAS,CAACC,QAA/B;MACAS,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBZ,SAAS,CAACE,QAA/B,EAHyB,CAKzB;;MAEA,IAAI;QACF,MAAMQ,IAAI,CAACG,MAAL,GAAcC,IAAd,CAAmB,MAAM;UAC7BC,KAAK,CAAC,cAAD,CAAL;UACCf,SAAS,CAACC,QAAV,GAAqB,EAAtB,EAA4BD,SAAS,CAACE,QAAV,GAAqB,EAAjD,CAF6B,CAG7B;;UACAH,MAAM,CAACiB,IAAP,CAAY,SAAZ;QAED,CANK,CAAN,CADE,CAQF;MACF,CATA,CASE,OAAOC,KAAP,EAAc;QACd;QACAF,KAAK,CAAC,YAAYE,KAAK,CAACC,IAAlB,GAAyB,GAAzB,GAA+BD,KAAK,CAACE,OAAtC,CAAL;MACF;IACD,CApBD;;IAyBAzB,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;IAIA,OAAO;MAAEM,SAAF;MAAYS;IAAZ,CAAP;EACF;;AA5C6B,CAAD,CAA9B","names":["defineComponent","reactive","onMounted","useRouter","Parse","components","setup","router","formState","username","password","username1","password1","signup","signin","logout","show","Signup","user","User","set","signUp","then","alert","push","error","code","message"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\signUp.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div>\r\n     \r\n\r\n      <!-- <p>User view</p> -->\r\n      <div v-if=\"formState.signup\">\r\n        <p>Sign up</p>\r\n        <input v-model=\"formState.username\" placeholder=\"username\" />\r\n        <br />\r\n        <input v-model=\"formState.password\" placeholder=\"password\" />\r\n        <br />\r\n  \r\n        <button @click=\"Signup\">Sign UP</button> <span>Already an ccount <router-link to=\"/signin\">SignIn</router-link></span> \r\n      </div>\r\n      \r\n    </div>\r\n  </template>\r\n      \r\n      <script>\r\n  import { defineComponent, reactive, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\n  \r\n  import Parse from \"parse\";\r\n  \r\n  export default defineComponent({\r\n    components: {},\r\n    setup() {\r\n        const router = useRouter()\r\n      const formState = reactive({\r\n        username: \"\",\r\n        password: \"\",\r\n        username1: \"\",\r\n        password1: \"\",\r\n        signup: true,\r\n        signin: true,\r\n        logout: true,\r\n        show: true\r\n      });\r\n      const Signup = async () => {\r\n        const user = new Parse.User();\r\n        user.set(\"username\", formState.username);\r\n        user.set(\"password\", formState.password);\r\n  \r\n        // other fields can be set just like with Parse.Object\r\n  \r\n        try {\r\n          await user.signUp().then(() => {\r\n            alert(\"user created\");\r\n            (formState.username = \"\"), (formState.password = \"\");\r\n            // location.reload();\r\n            router.push('/signin')\r\n\r\n          });\r\n          // Hooray! Let them use the app now.\r\n        } catch (error) {\r\n          // Show the error message somewhere and let the user try again.\r\n          alert(\"Error: \" + error.code + \" \" + error.message);\r\n        }\r\n      };\r\n  \r\n\r\n   \r\n  \r\n      onMounted(() => {\r\n      \r\n      });\r\n  \r\n      return { formState,Signup  };\r\n    }\r\n  });\r\n  </script>\r\n      "]},"metadata":{},"sourceType":"module"}