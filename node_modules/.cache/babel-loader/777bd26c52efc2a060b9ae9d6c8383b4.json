{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"User view\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Sign In\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _ctx.formState.signup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formState.username = $event),\n    placeholder: \"username\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.formState.password = $event),\n    placeholder: \"password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.Signup && _ctx.Signup(...args))\n  }, \"Sign UP\")])) : _createCommentVNode(\"v-if\", true), _ctx.formState.signin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.formState.username = $event),\n    placeholder: \"username\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.formState.password = $event),\n    placeholder: \"password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.Signin && _ctx.Signin(...args))\n  }, \"Sign In\")])) : _createCommentVNode(\"v-if\", true), _ctx.formState.signin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => _ctx.Logout && _ctx.Logout(...args))\n  }, \"Logout\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;gCAIIA,oBAAgB,GAAhB,EAAgB,IAAhB,EAAG,WAAH,EAAY;AAAA;AAAZ;;;;;;;;;gCAQIA,oBAAc,GAAd,EAAc,IAAd,EAAG,SAAH,EAAU;AAAA;AAAV;;;;;;uBATNC,oBAkBM,KAlBN,EAkBM,IAlBN,EAkBM,CAjBJC,UAiBI,EAhBOC,eAAUC,wBAArBH,oBAKM,KALN,EAKMI,UALN,EAKM,iBAJJL,oBAA6D,OAA7D,EAA6D;+DAA7CG,eAAUG,WAAQC,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA7D;;EAAA,kBAAgBL,eAAUG,WAItB,kBAHJN,oBAA6D,OAA7D,EAA6D;+DAA7CG,eAAUM,WAAQF,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA7D;;EAAA,kBAAgBL,eAAUM,WAGtB,EADJT,oBAAwC,QAAxC,EAAwC;IAA/BU,OAAK,yCAAEP,mCAAF;EAA0B,CAAxC,EAAwB,SAAxB,CACI,CALN,sCAgBI,EAVOA,eAAUQ,wBAArBV,oBAMQ,KANR,EAMQW,UANR,EAMQ,CALJC,UAKI,kBAJJb,oBAA6D,OAA7D,EAA6D;+DAA7CG,eAAUG,WAAQC,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA7D;;EAAA,kBAAgBL,eAAUG,WAItB,kBAHJN,oBAA6D,OAA7D,EAA6D;+DAA7CG,eAAUM,WAAQF,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA7D;;EAAA,kBAAgBL,eAAUM,WAGtB,EADJT,oBAAwC,QAAxC,EAAwC;IAA/BU,OAAK,yCAAEP,mCAAF;EAA0B,CAAxC,EAAwB,SAAxB,CACI,CANR,sCAUI,EAHSA,eAAUQ,wBAArBV,oBAEM,KAFN,EAEMa,UAFN,EAEM,CADJd,oBAAuC,QAAvC,EAAuC;IAA9BU,OAAK,yCAAEP,mCAAF;EAAyB,CAAvC,EAAwB,QAAxB,CACI,CAFN,sCAGE,CAlBN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_ctx","signup","_hoisted_2","username","$event","placeholder","password","onClick","signin","_hoisted_3","_hoisted_4","_hoisted_5"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\UserView.vue"],"sourcesContent":["\r\n\r\n<template>\r\n  <div>\r\n    <p>User view</p>\r\n    <div v-if=\"formState.signup\">\r\n      <input v-model=\"formState.username\" placeholder=\"username\" />\r\n      <input v-model=\"formState.password\" placeholder=\"password\" />\r\n\r\n      <button @click=\"Signup\">Sign UP</button>\r\n    </div>\r\n    <div v-if=\"formState.signin\">\r\n        <p>Sign In</p>\r\n        <input v-model=\"formState.username\" placeholder=\"username\" />\r\n        <input v-model=\"formState.password\" placeholder=\"password\" />\r\n  \r\n        <button @click=\"Signin\">Sign In</button>\r\n      </div>\r\n      <div v-if=\"formState.signin\">\r\n        <button @click=\"Logout\">Logout</button>\r\n      </div>\r\n  </div>\r\n</template>\r\n    \r\n    <script>\r\nimport { defineComponent, reactive, onMounted } from \"vue\";\r\n\r\nimport Parse from \"parse\";\r\n\r\nexport default defineComponent({\r\n  components: {},\r\n  setup() {\r\n    const formState = reactive({\r\n      username: \"\",\r\n      password: \"\",\r\n      signup:true,\r\n      signin:true,\r\n      logout:true,\r\n      show:true\r\n    });\r\n    const Signup = async () => {\r\n      const user = new Parse.User();\r\n      user.set(\"username\", formState.username);\r\n      user.set(\"password\", formState.password);\r\n\r\n      // other fields can be set just like with Parse.Object\r\n\r\n      try {\r\n        await user.signUp().then(()=>{alert(\"user created\")\r\n        formState.username='',\r\n        formState.password=''\r\n    });\r\n        // Hooray! Let them use the app now.\r\n      } catch (error) {\r\n        // Show the error message somewhere and let the user try again.\r\n        alert(\"Error: \" + error.code + \" \" + error.message);\r\n      }\r\n    };\r\n\r\n    const Signin = async()=>{\r\n        await Parse.User.logIn(formState.username, formState.password).then(()=>{\r\n            alert(\"user sign in success\")\r\n        });\r\n\r\n    }\r\n    const Logout = ()=>{\r\n        // const currentUser = Parse.User.current();\r\n       \r\n        Parse.User.logOut().then(() => {\r\n            alert ('user logged out')\r\n\r\n//   const currentUser = Parse.User.current();  // this will now be null\r\n});\r\n    }\r\n\r\n    onMounted(() => {\r\n      const checkUseer = Parse.User.current();\r\n      if(checkUseer){\r\n        formState.signup=false\r\n        formState.signin=false\r\n      }\r\n      else{\r\n        formState.logout=false\r\n      }\r\n\r\n    });\r\n\r\n    return { formState, Signup,Signin,Logout };\r\n  }\r\n});\r\n</script>\r\n    "]},"metadata":{},"sourceType":"module"}