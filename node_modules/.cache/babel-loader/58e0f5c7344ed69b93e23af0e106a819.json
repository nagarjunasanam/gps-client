{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"AIzaSyBItZDFpGCcIYt2HxahOQ4XnY8tn2dDn40\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"hello\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Loader = _resolveComponent(\"Loader\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _hoisted_2, _createVNode(_component_Loader), _hoisted_3]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAA8C,GAA9C,EAA8C,IAA9C,EAAG,yCAAH,EAA0C;AAAA;AAA1C;;gCACAA,oBAAY,GAAZ,EAAY,IAAZ,EAAG,OAAH,EAAQ;AAAA;AAAR;;gCAEAA,oBAAoB,KAApB,EAAoB;EAAfC,EAAE,EAAC;AAAY,CAApB,EAAa,IAAb,EAAa;AAAA;AAAb;;;;;uBAJFC,oBAKM,KALN,EAKM,IALN,EAKM,CAJJC,UAII,EAHJC,UAGI,EAFJC,aAAUC,iBAAV,CAEI,EADJC,UACI,CALN","names":["_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_Loader","_hoisted_3"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <p>AIzaSyBItZDFpGCcIYt2HxahOQ4XnY8tn2dDn40</p>\n    <p>hello</p>\n    <Loader />\n    <div id=\"map\"></div>\n  </div>\n</template>\n<script>\nimport { defineComponent, reactive, onMounted } from \"vue\";\nimport { Loader } from 'https://cdn.pika.dev/google-maps';\n// import Parse from 'parse'\n\nexport default defineComponent({\n  components:{\n    Loader\n    \n     \n  },\n  setup() {\n    const formState = reactive({\n      image: \"\"\n    });\n\n    onMounted(async () => {\n      var Loader = new Loader('AIzaSyBhjRdMR7Ibbe0AT6e7TQDEv7Q3y7Gjofg',{})\n      const google = await Loader.load();\n      if (navigator.geolocation) {\n        console.log(\"hello\");\n        navigator.geolocation.watchPosition(position => {\n          console.log(position);\n          var point = new google.maps.LatLng(\n            position.coords.latitude,\n            position.coords.longitude\n          );\n          console.log(point)\n        });\n      }\n    });\n\n    return {\n      formState\n    };\n  }\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}