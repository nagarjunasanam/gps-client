{"ast":null,"code":"import { defineComponent, reactive, onMounted } from \"vue\";\nimport { GoogleMap, Marker } from \"vue3-google-map\";\nexport default defineComponent({\n  components: {\n    GoogleMap,\n    Marker\n  },\n\n  setup() {\n    const center = {\n      lat: 40.689247,\n      lng: -74.044502\n    };\n    const formState = reactive({\n      image: \"\",\n      center: {\n        lat: 40.689247,\n        lng: -74.044502\n      },\n      loader: false\n    });\n    onMounted(() => {\n      if (navigator.geolocation) {\n        console.log(\"h\");\n        navigator.geolocation.getCurrentPosition(position => {\n          console.log(position.coords.latitude);\n          console.log(position.coords.longitude);\n          console.log(formState.center.lat);\n          formState.center.lat = position.coords.latitude;\n          formState.center.lng = position.coords.longitude;\n          formState.loader = true;\n        });\n      }\n    });\n\n    const updateLocation = async () => {\n      if (navigator.geolocation) {\n        await navigator.geolocation.getCurrentPosition(position => {\n          console.log(position.coords.latitude);\n          console.log(position.coords.longitude);\n          formState.center.lat = position.coords.latitude;\n          formState.center.lng = position.coords.longitude;\n        });\n      }\n    }; // setInterval(updateLocation, 5000);\n\n\n    const trackLocation = () => {\n      // console.log(\"hi\")\n      setTimeout(updateLocation, 1000);\n    };\n\n    setTimeout(() => {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position);\n      });\n    }, 5000);\n    return {\n      center,\n      formState,\n      updateLocation,\n      trackLocation\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAgHA,SAASA,eAAT,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAmD,KAAnD;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,iBAAlC;AAEA,eAAeJ,eAAe,CAAC;EAC7BK,UAAU,EAAE;IAAEF,SAAF;IAAaC;EAAb,CADiB;;EAE7BE,KAAK,GAAG;IACN,MAAMC,MAAK,GAAI;MAAEC,GAAG,EAAE,SAAP;MAAkBC,GAAG,EAAE,CAAC;IAAxB,CAAf;IACA,MAAMC,SAAQ,GAAIT,QAAQ,CAAC;MACzBU,KAAK,EAAE,EADkB;MAEzBJ,MAAM,EAAC;QAACC,GAAG,EAAE,SAAN;QAAiBC,GAAG,EAAE,CAAC;MAAvB,CAFkB;MAGzBG,MAAM,EAAC;IAHkB,CAAD,CAA1B;IAKAV,SAAS,CAAC,MAAI;MACZ,IAAGW,SAAS,CAACC,WAAb,EAAyB;QACvBC,OAAO,CAACC,GAAR,CAAY,GAAZ;QACAH,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CAA0CC,QAAD,IAAY;UACnDH,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,MAAT,CAAgBC,QAA5B;UACAL,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,MAAT,CAAgBE,SAA5B;UACAN,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACH,MAAV,CAAiBC,GAA7B;UACAE,SAAS,CAACH,MAAV,CAAiBC,GAAjB,GAAqBU,QAAQ,CAACC,MAAT,CAAgBC,QAArC;UACAV,SAAS,CAACH,MAAV,CAAiBE,GAAjB,GAAqBS,QAAQ,CAACC,MAAT,CAAgBE,SAArC;UACAX,SAAS,CAACE,MAAV,GAAiB,IAAjB;QAED,CARD;MASF;IACD,CAbQ,CAAT;;IAeA,MAAMU,cAAa,GAAI,YAAS;MAC9B,IAAGT,SAAS,CAACC,WAAb,EAAyB;QAEvB,MAAMD,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CAA0CC,QAAD,IAAY;UACzDH,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,MAAT,CAAgBC,QAA5B;UACAL,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,MAAT,CAAgBE,SAA5B;UAEAX,SAAS,CAACH,MAAV,CAAiBC,GAAjB,GAAqBU,QAAQ,CAACC,MAAT,CAAgBC,QAArC;UACAV,SAAS,CAACH,MAAV,CAAiBE,GAAjB,GAAqBS,QAAQ,CAACC,MAAT,CAAgBE,SAArC;QAED,CAPK,CAAN;MAQF;IAEF,CAbA,CAtBM,CAoCN;;;IAEA,MAAME,aAAY,GAAI,MAAI;MACxB;MACAC,UAAU,CAACF,cAAD,EAAiB,IAAjB,CAAV;IACF,CAHA;;IAIAE,UAAU,CAAC,MAAI;MACbX,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CAA0CC,QAAD,IAAY;QACpDH,OAAO,CAACC,GAAR,CAAYE,QAAZ;MAEE,CAHH;IAKD,CANS,EAMP,IANO,CAAV;IAQA,OAAO;MAAEX,MAAF;MAAUG,SAAV;MAAoBY,cAApB;MAAmCC;IAAnC,CAAP;EACD;;AArD4B,CAAD,CAA9B","names":["defineComponent","reactive","onMounted","GoogleMap","Marker","components","setup","center","lat","lng","formState","image","loader","navigator","geolocation","console","log","getCurrentPosition","position","coords","latitude","longitude","updateLocation","trackLocation","setTimeout"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\HomeView.vue"],"sourcesContent":["<!-- <template>\n  <div>\n    <p>AIzaSyBItZDFpGCcIYt2HxahOQ4XnY8tn2dDn40</p>\n    <p>hello</p>\n    <GoogleMap api-key=\"AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4\" style=\"width: 100%; height: 500px\" :center=\"center\" :zoom=\"15\">\n      <Marker :options=\"{ position: center }\" />\n    </GoogleMap>\n   \n  </div>\n</template>\n<script>\nimport { defineComponent, reactive, onMounted } from \"vue\";\n// import {Loader} from 'google-maps';\n// import { Loader } from '@googlemaps/js-api-loader';\n\nimport { GoogleMap, Marker } from \"vue3-google-map\";\n\n\n// import Parse from 'parse'\n\nexport default defineComponent({\n  component:{\n   \n    GoogleMap, Marker\n    \n  },\n  setup() {\n    const formState = reactive({\n      image: \"\",\n      center:{lat:17.3943817,lng:78.3576373}\n    });\n    const center = { lat: 40.689247, lng: -74.044502 };\n    onMounted(async () => {\n// or const {Loader} = require('google-maps'); without typescript\n \n// const options: LoaderOptions = {/* todo */};\n\n// const loader = new Loader('AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4', {});\n// const loader = new Loader({\n//   apiKey: \"AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4\",\n\n// });\n \n//  await loader.load().then(async(google)=>{\n//   if (navigator.geolocation) { \n//         navigator.geolocation.getCurrentPosition(function(position) {  \n//             console.log(\"position\",position)\n      \n//           var point = new google.maps.LatLng(position.coords.latitude, \n//                                              position.coords.longitude);\n                                             \n      \n//           // Initialize the Google Maps API v3\n//           var map = new google.maps.Map(document.getElementById('map'), {\n//              zoom: 15,\n//             center: point,\n//             mapTypeId: google.maps.MapTypeId.ROADMAP\n//           });\n      \n//           // Place a marker\n//           new google.maps.Marker({\n//             position: point,\n//             map: map\n//           });\n//         }); \n//       } \n//       else {\n//         alert('W3C Geolocation API is not available');\n//       } \n//  });\n\nif (navigator.geolocation) { \n        navigator.geolocation.getCurrentPosition(function(position) {  \n            console.log(\"position\",position)\n      \n          // var point = new google.maps.LatLng(position.coords.latitude, \n          //                                    position.coords.longitude);\n\n          console.log(position.coords.latitude)\n          console.log(position.coords.longitude)\n          formState.center.lat = position.coords.latitude\n          formState.center.lng = position.coords.longitude\n        \n        }); \n      } \n      else {\n        alert('W3C Geolocation API is not available');\n      } \n\n\n      \n    });\n\n    return {\n      formState,\n      center\n    };\n  }\n});\n</script> -->\n\n<template>\n<div>\n  <p>{{formState.center}}</p>\n  <button @click=\"updateLocation()\">Track Location</button>\n  <GoogleMap v-if=\"formState.loader\" api-key=\"AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4\" style=\"width: 100%; height: 500px\" :center=\"formState.center\" :zoom=\"15\">\n    <Marker :options=\"{ position: formState.center }\" />\n  </GoogleMap>\n</div>\n</template>\n\n<script>\nimport { defineComponent,reactive ,onMounted} from \"vue\";\nimport { GoogleMap, Marker } from \"vue3-google-map\";\n\nexport default defineComponent({\n  components: { GoogleMap, Marker },\n  setup() {\n    const center = { lat: 40.689247, lng: -74.044502 };\n    const formState = reactive({\n      image: \"\",\n      center:{lat: 40.689247, lng: -74.044502},\n      loader:false\n    });\n    onMounted(()=>{\n      if(navigator.geolocation){\n        console.log(\"h\")\n        navigator.geolocation.getCurrentPosition((position)=>{\n          console.log(position.coords.latitude)\n          console.log(position.coords.longitude)\n          console.log(formState.center.lat)\n          formState.center.lat=position.coords.latitude\n          formState.center.lng=position.coords.longitude\n          formState.loader=true\n\n        })\n      }\n    })\n\n    const updateLocation = async()=>{\n      if(navigator.geolocation){\n        \n        await navigator.geolocation.getCurrentPosition((position)=>{\n          console.log(position.coords.latitude)\n          console.log(position.coords.longitude)\n          \n          formState.center.lat=position.coords.latitude\n          formState.center.lng=position.coords.longitude\n\n        })\n      }\n\n    }\n    // setInterval(updateLocation, 5000);\n\n    const trackLocation = ()=>{\n      // console.log(\"hi\")\n      setTimeout(updateLocation, 1000);\n    }\n    setTimeout(()=>{\n      navigator.geolocation.getCurrentPosition((position)=>{\n       console.log(position)\n\n        })\n      \n    }, 5000);\n\n    return { center ,formState,updateLocation,trackLocation};\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}