{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.find-last.js\");\n\nrequire(\"core-js/modules/es.typed-array.find-last-index.js\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\n\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\n\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\n\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var _context8, _context9;\n\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? _forEachInstanceProperty2(_context8 = ownKeys(Object(source), !0)).call(_context8, function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty2(_context9 = ownKeys(Object(source))).call(_context9, function (key) {\n      _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar ParseError = require('./ParseError').default;\n\nvar XHR = null;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource =\n  | {\n      format: 'file',\n      file: Blob,\n      type: string,\n    }\n  | {\n      format: 'base64',\n      base64: string,\n      type: string,\n    }\n  | {\n      format: 'uri',\n      uri: string,\n      type: string,\n    };*/\n\n\nvar base64Regex = new RegExp('([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))', 'i');\nvar dataUriRegex = new RegExp(\"^data:([a-zA-Z]+\\\\/[-a-zA-Z0-9+.]+(;[a-z-]+=[a-zA-Z0-9+.-]+)?)?(;base64)?,(\".concat(base64Regex.source, \")*$\"), 'i');\n\nfunction b64Digit(number\n/*: number*/\n)\n/*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n\n  if (number === 62) {\n    return '+';\n  }\n\n  if (number === 63) {\n    return '/';\n  }\n\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n *\n * @alias Parse.File\n */\n\n\nvar ParseFile = /*#__PURE__*/function () {\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  function ParseFile(name\n  /*: string*/\n  , data\n  /*:: ?: FileData*/\n  , type\n  /*:: ?: string*/\n  , metadata\n  /*:: ?: Object*/\n  , tags\n  /*:: ?: Object*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty2.default)(this, \"_name\", void 0);\n    (0, _defineProperty2.default)(this, \"_url\", void 0);\n    (0, _defineProperty2.default)(this, \"_source\", void 0);\n    (0, _defineProperty2.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty2.default)(this, \"_data\", void 0);\n    (0, _defineProperty2.default)(this, \"_requestTask\", void 0);\n    (0, _defineProperty2.default)(this, \"_metadata\", void 0);\n    (0, _defineProperty2.default)(this, \"_tags\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var _context, _context2, _context3; // Check if data URI or base64 string is valid\n\n\n        var validationRegex = new RegExp(base64Regex.source + '|' + dataUriRegex.source, 'i');\n\n        if (!validationRegex.test(data.base64)) {\n          throw new Error('Cannot create a Parse.File without valid data URIs or base64 encoded data.');\n        }\n\n        var base64 = (0, _slice.default)(_context = data.base64.split(',')).call(_context, -1)[0];\n\n        var _type = specifiedType || (0, _slice.default)(_context2 = (0, _slice.default)(_context3 = data.base64.split(';')).call(_context3, 0, 1)[0].split(':')).call(_context2, 1, 2)[0] || ''; // https://tools.ietf.org/html/rfc2397\n        // If <mediatype> is omitted, it defaults to text/plain;charset=US-ASCII.\n        // As a shorthand, \"text/plain\" can be omitted but the charset parameter supplied.\n\n\n        if (dataUriRegex.test(data.base64)) {\n          _type = _type || 'text/plain';\n        }\n\n        this._source = {\n          format: 'base64',\n          base64: base64,\n          type: _type\n        };\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @returns {Promise} Promise that is resolve with base64 data\n   */\n\n\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _this = this;\n\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this._data) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this._data);\n\n              case 2:\n                if (this._url) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot retrieve data for unsaved ParseFile.');\n\n              case 4:\n                options = {\n                  requestTask: function (task) {\n                    return _this._requestTask = task;\n                  }\n                };\n                controller = _CoreManager.default.getFileController();\n                _context4.next = 8;\n                return controller.download(this._url, options);\n\n              case 8:\n                result = _context4.sent;\n                this._data = result.base64;\n                return _context4.abrupt(\"return\", this._data);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _getData.apply(this, arguments);\n      };\n    }()\n    /**\n     * Gets the name of the file. Before save is called, this is the filename\n     * given by the user. After save is called, that name gets prefixed with a\n     * unique identifier.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"name\",\n    value: function ()\n    /*: string*/\n    {\n      return this._name;\n    }\n    /**\n     * Gets the url of the file. It is only available after you save the file or\n     * after you get the file from a Parse.Object.\n     *\n     * @param {object} options An object to specify url options\n     * @returns {string}\n     */\n\n  }, {\n    key: \"url\",\n    value: function (options\n    /*:: ?: { forceSecure?: boolean }*/\n    )\n    /*: ?string*/\n    {\n      options = options || {};\n\n      if (!this._url) {\n        return;\n      }\n\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n    /**\n     * Gets the metadata of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"metadata\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._metadata;\n    }\n    /**\n     * Gets the tags of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"tags\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._tags;\n    }\n    /**\n     * Saves the file to the Parse cloud.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *     behalf of a specific user.\n     *   <li>progress: In Browser only, callback for upload progress. For example:\n     * <pre>\n     * let parseFile = new Parse.File(name, file);\n     * parseFile.save({\n     *   progress: (progressValue, loaded, total, { type }) => {\n     *     if (type === \"upload\" && progressValue !== null) {\n     *       // Update the UI using progressValue\n     *     }\n     *   }\n     * });\n     * </pre>\n     * </ul>\n     * @returns {Promise} Promise that is resolved when the save finishes.\n     */\n\n  }, {\n    key: \"save\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    ) {\n      var _this2 = this;\n\n      options = options || {};\n\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n\n      options.metadata = this._metadata;\n      options.tags = this._tags;\n\n      var controller = _CoreManager.default.getFileController();\n\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n    /**\n     * Aborts the request if it has already been sent.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask.abort();\n      }\n\n      this._requestTask = null;\n    }\n    /**\n     * Deletes the file from the Parse cloud.\n     * In Cloud Code and Node only with Master Key.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     * <pre>\n     * @returns {Promise} Promise that is resolved when the delete finishes.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _this3 = this;\n\n      var options\n      /*:: ?: FullOptions*/\n      = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this._name) {\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\n      }\n\n      var destroyOptions = {\n        useMasterKey: true\n      };\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n\n      var controller = _CoreManager.default.getFileController();\n\n      return controller.deleteFile(this._name, destroyOptions).then(function () {\n        _this3._data = null;\n        _this3._requestTask = null;\n        return _this3;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function ()\n    /*: { name: ?string, url: ?string }*/\n    {\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      } // Unsaved Files are never equal, since they will be saved to different URLs\n\n\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n    /**\n     * Sets metadata to be saved with file object. Overwrites existing metadata\n     *\n     * @param {object} metadata Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setMetadata\",\n    value: function (metadata\n    /*: any*/\n    ) {\n      var _this4 = this;\n\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\n        var _context5;\n\n        (0, _forEach.default)(_context5 = (0, _keys.default)(metadata)).call(_context5, function (key) {\n          _this4.addMetadata(key, metadata[key]);\n        });\n      }\n    }\n    /**\n     * Sets metadata to be saved with file object. Adds to existing metadata.\n     *\n     * @param {string} key key to store the metadata\n     * @param {*} value metadata\n     */\n\n  }, {\n    key: \"addMetadata\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: any*/\n    ) {\n      if (typeof key === 'string') {\n        this._metadata[key] = value;\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Overwrites existing tags\n     *\n     * @param {object} tags Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setTags\",\n    value: function (tags\n    /*: any*/\n    ) {\n      var _this5 = this;\n\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\n        var _context6;\n\n        (0, _forEach.default)(_context6 = (0, _keys.default)(tags)).call(_context6, function (key) {\n          _this5.addTag(key, tags[key]);\n        });\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Adds to existing tags.\n     *\n     * @param {string} key key to store tags\n     * @param {*} value tag\n     */\n\n  }, {\n    key: \"addTag\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    ) {\n      if (typeof key === 'string') {\n        this._tags[key] = value;\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj)\n    /*: ParseFile*/\n    {\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes\n    /*: Array<number>*/\n    )\n    /*: string*/\n    {\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3f), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0f), has2 ? b64Digit(b2 << 2 & 0x3c | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3f) : '='].join('');\n      }\n\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\n\nvar DefaultController = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(name\n    /*: string*/\n    , source\n    /*: FileSource*/\n    , options\n    /*:: ?: FullOptions*/\n    ) {\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\n\n      return _regenerator.default.wrap(function (_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(source.format !== 'file')) {\n                _context7.next = 2;\n                break;\n              }\n\n              throw new Error('saveFile can only be used with File-type sources.');\n\n            case 2:\n              _context7.next = 4;\n              return new _promise.default(function (res, rej) {\n                // eslint-disable-next-line no-undef\n                var reader = new FileReader();\n\n                reader.onload = function () {\n                  return res(reader.result);\n                };\n\n                reader.onerror = function (error) {\n                  return rej(error);\n                };\n\n                reader.readAsDataURL(source.file);\n              });\n\n            case 4:\n              base64Data = _context7.sent; // we only want the data after the comma\n              // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n\n              _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n              // use the entire string instead\n\n              data = second ? second : first;\n              newSource = {\n                format: 'base64',\n                base64: data,\n                type: source.type || (source.file ? source.file.type : null)\n              };\n              _context7.next = 10;\n              return DefaultController.saveBase64(name, newSource, options);\n\n            case 10:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function () {\n      return _saveFile.apply(this, arguments);\n    };\n  }(),\n  saveBase64: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n\n    var data\n    /*: { base64: any, _ContentType?: any, fileData: Object }*/\n    = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n\n        if (!this.response) {\n          return resolve({});\n        }\n\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name\n  /*: string*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID')\n    };\n\n    if (options.useMasterKey) {\n      headers['X-Parse-Master-Key'] = _CoreManager.default.get('MASTER_KEY');\n    }\n\n    var url = _CoreManager.default.get('SERVER_URL');\n\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return _promise.default.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n  _setXHR: function (xhr\n  /*: any*/\n  ) {\n    XHR = xhr;\n  },\n  _getXHR: function () {\n    return XHR;\n  }\n};\n\n_CoreManager.default.setFileController(DefaultController);\n\nvar _default = ParseFile;\nexports.default = _default;\nexports.b64Digit = b64Digit;","map":{"version":3,"names":["_interopRequireDefault","require","_Object$defineProperty","_Object$defineProperties","_Object$getOwnPropertyDescriptors","_forEachInstanceProperty2","_Object$getOwnPropertyDescriptor","_filterInstanceProperty","_Object$getOwnPropertySymbols","_Object$keys2","exports","value","default","_indexOf","_slicedToArray2","_promise","_keys","_forEach","_typeof2","_regenerator","_asyncToGenerator2","_slice","_isArray","_classCallCheck2","_createClass2","_defineProperty2","_CoreManager","ownKeys","object","enumerableOnly","keys","symbols","call","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","_context8","_context9","source","Object","key","ParseError","XHR","XMLHttpRequest","base64Regex","RegExp","dataUriRegex","concat","b64Digit","number","String","fromCharCode","TypeError","ParseFile","name","data","type","metadata","tags","specifiedType","_name","_metadata","_tags","undefined","_data","encodeBase64","_source","format","base64","Blob","file","uri","_context","_context2","_context3","validationRegex","test","Error","split","_type","_getData","mark","_callee","_this","options","controller","result","wrap","_context4","prev","next","abrupt","_url","requestTask","task","_requestTask","getFileController","download","sent","stop","forceSecure","replace","_this2","_previousSave","saveFile","then","res","url","newSource","contentType","saveBase64","abort","_this3","FILE_DELETE_UNNAMED_ERROR","destroyOptions","useMasterKey","hasOwnProperty","deleteFile","__type","other","_this4","_context5","addMetadata","_this5","_context6","addTag","obj","bytes","chunks","Math","ceil","b1","b2","b3","has2","has3","join","DefaultController","_saveFile","_callee2","base64Data","_base64Data$split","_base64Data$split2","first","second","_context7","rej","reader","FileReader","onload","onerror","error","readAsDataURL","fileData","_ContentType","getRESTController","request","downloadAjax","reject","resolve","xhr","open","responseType","e","onreadystatechange","readyState","DONE","response","Uint8Array","getResponseHeader","send","headers","get","ajax","catch","handleError","_setXHR","_getXHR","setFileController","_default"],"sources":["C:/Users/user/Downloads/parse/node_modules/parse/lib/browser/ParseFile.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\n\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\n\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\n\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var _context8, _context9;\n\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? _forEachInstanceProperty2(_context8 = ownKeys(Object(source), !0)).call(_context8, function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty2(_context9 = ownKeys(Object(source))).call(_context9, function (key) {\n      _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar ParseError = require('./ParseError').default;\n\nvar XHR = null;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource =\n  | {\n      format: 'file',\n      file: Blob,\n      type: string,\n    }\n  | {\n      format: 'base64',\n      base64: string,\n      type: string,\n    }\n  | {\n      format: 'uri',\n      uri: string,\n      type: string,\n    };*/\nvar base64Regex = new RegExp('([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))', 'i');\nvar dataUriRegex = new RegExp(\"^data:([a-zA-Z]+\\\\/[-a-zA-Z0-9+.]+(;[a-z-]+=[a-zA-Z0-9+.-]+)?)?(;base64)?,(\".concat(base64Regex.source, \")*$\"), 'i');\n\nfunction b64Digit(number\n/*: number*/\n)\n/*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n\n  if (number === 62) {\n    return '+';\n  }\n\n  if (number === 63) {\n    return '/';\n  }\n\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n *\n * @alias Parse.File\n */\n\n\nvar ParseFile = /*#__PURE__*/function () {\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  function ParseFile(name\n  /*: string*/\n  , data\n  /*:: ?: FileData*/\n  , type\n  /*:: ?: string*/\n  , metadata\n  /*:: ?: Object*/\n  , tags\n  /*:: ?: Object*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty2.default)(this, \"_name\", void 0);\n    (0, _defineProperty2.default)(this, \"_url\", void 0);\n    (0, _defineProperty2.default)(this, \"_source\", void 0);\n    (0, _defineProperty2.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty2.default)(this, \"_data\", void 0);\n    (0, _defineProperty2.default)(this, \"_requestTask\", void 0);\n    (0, _defineProperty2.default)(this, \"_metadata\", void 0);\n    (0, _defineProperty2.default)(this, \"_tags\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var _context, _context2, _context3; // Check if data URI or base64 string is valid\n\n\n        var validationRegex = new RegExp(base64Regex.source + '|' + dataUriRegex.source, 'i');\n\n        if (!validationRegex.test(data.base64)) {\n          throw new Error('Cannot create a Parse.File without valid data URIs or base64 encoded data.');\n        }\n\n        var base64 = (0, _slice.default)(_context = data.base64.split(',')).call(_context, -1)[0];\n\n        var _type = specifiedType || (0, _slice.default)(_context2 = (0, _slice.default)(_context3 = data.base64.split(';')).call(_context3, 0, 1)[0].split(':')).call(_context2, 1, 2)[0] || ''; // https://tools.ietf.org/html/rfc2397\n        // If <mediatype> is omitted, it defaults to text/plain;charset=US-ASCII.\n        // As a shorthand, \"text/plain\" can be omitted but the charset parameter supplied.\n\n\n        if (dataUriRegex.test(data.base64)) {\n          _type = _type || 'text/plain';\n        }\n\n        this._source = {\n          format: 'base64',\n          base64: base64,\n          type: _type\n        };\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @returns {Promise} Promise that is resolve with base64 data\n   */\n\n\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _this = this;\n\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this._data) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this._data);\n\n              case 2:\n                if (this._url) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot retrieve data for unsaved ParseFile.');\n\n              case 4:\n                options = {\n                  requestTask: function (task) {\n                    return _this._requestTask = task;\n                  }\n                };\n                controller = _CoreManager.default.getFileController();\n                _context4.next = 8;\n                return controller.download(this._url, options);\n\n              case 8:\n                result = _context4.sent;\n                this._data = result.base64;\n                return _context4.abrupt(\"return\", this._data);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _getData.apply(this, arguments);\n      };\n    }()\n    /**\n     * Gets the name of the file. Before save is called, this is the filename\n     * given by the user. After save is called, that name gets prefixed with a\n     * unique identifier.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"name\",\n    value: function ()\n    /*: string*/\n    {\n      return this._name;\n    }\n    /**\n     * Gets the url of the file. It is only available after you save the file or\n     * after you get the file from a Parse.Object.\n     *\n     * @param {object} options An object to specify url options\n     * @returns {string}\n     */\n\n  }, {\n    key: \"url\",\n    value: function (options\n    /*:: ?: { forceSecure?: boolean }*/\n    )\n    /*: ?string*/\n    {\n      options = options || {};\n\n      if (!this._url) {\n        return;\n      }\n\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n    /**\n     * Gets the metadata of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"metadata\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._metadata;\n    }\n    /**\n     * Gets the tags of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"tags\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._tags;\n    }\n    /**\n     * Saves the file to the Parse cloud.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *     behalf of a specific user.\n     *   <li>progress: In Browser only, callback for upload progress. For example:\n     * <pre>\n     * let parseFile = new Parse.File(name, file);\n     * parseFile.save({\n     *   progress: (progressValue, loaded, total, { type }) => {\n     *     if (type === \"upload\" && progressValue !== null) {\n     *       // Update the UI using progressValue\n     *     }\n     *   }\n     * });\n     * </pre>\n     * </ul>\n     * @returns {Promise} Promise that is resolved when the save finishes.\n     */\n\n  }, {\n    key: \"save\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    ) {\n      var _this2 = this;\n\n      options = options || {};\n\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n\n      options.metadata = this._metadata;\n      options.tags = this._tags;\n\n      var controller = _CoreManager.default.getFileController();\n\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n    /**\n     * Aborts the request if it has already been sent.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask.abort();\n      }\n\n      this._requestTask = null;\n    }\n    /**\n     * Deletes the file from the Parse cloud.\n     * In Cloud Code and Node only with Master Key.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     * <pre>\n     * @returns {Promise} Promise that is resolved when the delete finishes.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _this3 = this;\n\n      var options\n      /*:: ?: FullOptions*/\n      = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this._name) {\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\n      }\n\n      var destroyOptions = {\n        useMasterKey: true\n      };\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n\n      var controller = _CoreManager.default.getFileController();\n\n      return controller.deleteFile(this._name, destroyOptions).then(function () {\n        _this3._data = null;\n        _this3._requestTask = null;\n        return _this3;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function ()\n    /*: { name: ?string, url: ?string }*/\n    {\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      } // Unsaved Files are never equal, since they will be saved to different URLs\n\n\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n    /**\n     * Sets metadata to be saved with file object. Overwrites existing metadata\n     *\n     * @param {object} metadata Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setMetadata\",\n    value: function (metadata\n    /*: any*/\n    ) {\n      var _this4 = this;\n\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\n        var _context5;\n\n        (0, _forEach.default)(_context5 = (0, _keys.default)(metadata)).call(_context5, function (key) {\n          _this4.addMetadata(key, metadata[key]);\n        });\n      }\n    }\n    /**\n     * Sets metadata to be saved with file object. Adds to existing metadata.\n     *\n     * @param {string} key key to store the metadata\n     * @param {*} value metadata\n     */\n\n  }, {\n    key: \"addMetadata\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: any*/\n    ) {\n      if (typeof key === 'string') {\n        this._metadata[key] = value;\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Overwrites existing tags\n     *\n     * @param {object} tags Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setTags\",\n    value: function (tags\n    /*: any*/\n    ) {\n      var _this5 = this;\n\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\n        var _context6;\n\n        (0, _forEach.default)(_context6 = (0, _keys.default)(tags)).call(_context6, function (key) {\n          _this5.addTag(key, tags[key]);\n        });\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Adds to existing tags.\n     *\n     * @param {string} key key to store tags\n     * @param {*} value tag\n     */\n\n  }, {\n    key: \"addTag\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    ) {\n      if (typeof key === 'string') {\n        this._tags[key] = value;\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj)\n    /*: ParseFile*/\n    {\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes\n    /*: Array<number>*/\n    )\n    /*: string*/\n    {\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3f), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0f), has2 ? b64Digit(b2 << 2 & 0x3c | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3f) : '='].join('');\n      }\n\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\n\nvar DefaultController = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(name\n    /*: string*/\n    , source\n    /*: FileSource*/\n    , options\n    /*:: ?: FullOptions*/\n    ) {\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\n\n      return _regenerator.default.wrap(function (_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(source.format !== 'file')) {\n                _context7.next = 2;\n                break;\n              }\n\n              throw new Error('saveFile can only be used with File-type sources.');\n\n            case 2:\n              _context7.next = 4;\n              return new _promise.default(function (res, rej) {\n                // eslint-disable-next-line no-undef\n                var reader = new FileReader();\n\n                reader.onload = function () {\n                  return res(reader.result);\n                };\n\n                reader.onerror = function (error) {\n                  return rej(error);\n                };\n\n                reader.readAsDataURL(source.file);\n              });\n\n            case 4:\n              base64Data = _context7.sent; // we only want the data after the comma\n              // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n\n              _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n              // use the entire string instead\n\n              data = second ? second : first;\n              newSource = {\n                format: 'base64',\n                base64: data,\n                type: source.type || (source.file ? source.file.type : null)\n              };\n              _context7.next = 10;\n              return DefaultController.saveBase64(name, newSource, options);\n\n            case 10:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function () {\n      return _saveFile.apply(this, arguments);\n    };\n  }(),\n  saveBase64: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n\n    var data\n    /*: { base64: any, _ContentType?: any, fileData: Object }*/\n    = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n\n        if (!this.response) {\n          return resolve({});\n        }\n\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name\n  /*: string*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID')\n    };\n\n    if (options.useMasterKey) {\n      headers['X-Parse-Master-Key'] = _CoreManager.default.get('MASTER_KEY');\n    }\n\n    var url = _CoreManager.default.get('SERVER_URL');\n\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return _promise.default.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n  _setXHR: function (xhr\n  /*: any*/\n  ) {\n    XHR = xhr;\n  },\n  _getXHR: function () {\n    return XHR;\n  }\n};\n\n_CoreManager.default.setFileController(DefaultController);\n\nvar _default = ParseFile;\nexports.default = _default;\nexports.b64Digit = b64Digit;"],"mappings":"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"},"metadata":{},"sourceType":"script"}