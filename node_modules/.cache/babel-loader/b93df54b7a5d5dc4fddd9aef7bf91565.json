{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"User view\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formState.username = $event),\n    placeholder: \"username\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.formState.password = $event),\n    placeholder: \"password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.Signup && _ctx.Signup(...args))\n  }, \"Sign UP\")])]);\n}","map":{"version":3,"mappings":";;gCAIIA,oBAAgB,GAAhB,EAAgB,IAAhB,EAAG,WAAH,EAAY;AAAA;AAAZ;;;uBADFC,oBAQM,KARN,EAQM,IARN,EAQM,CAPJC,UAOI,EANJF,oBAKM,KALN,EAKM,IALN,EAKM,iBAJJA,oBAA6D,OAA7D,EAA6D;+DAA7CG,eAAUC,WAAQC,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA7D;;EAAA,kBAAgBH,eAAUC,WAItB,kBAHJJ,oBAA6D,OAA7D,EAA6D;+DAA7CG,eAAUI,WAAQF,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA7D;;EAAA,kBAAgBH,eAAUI,WAGtB,EADJP,oBAAwC,QAAxC,EAAwC;IAA/BQ,OAAK,yCAAEL,mCAAF;EAA0B,CAAxC,EAAwB,SAAxB,CACI,CALN,CAMI,CARN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_ctx","username","$event","placeholder","password","onClick"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\UserView.vue"],"sourcesContent":["\r\n\r\n<template>\r\n  <div>\r\n    <p>User view</p>\r\n    <div>\r\n      <input v-model=\"formState.username\" placeholder=\"username\" />\r\n      <input v-model=\"formState.password\" placeholder=\"password\" />\r\n\r\n      <button @click=\"Signup\">Sign UP</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n    \r\n    <script>\r\nimport { defineComponent, reactive, onMounted } from \"vue\";\r\n\r\nimport Parse from \"parse\";\r\n\r\nexport default defineComponent({\r\n  components: {},\r\n  setup() {\r\n    const formState = reactive({\r\n      username: \"\",\r\n      password: \"\"\r\n    });\r\n    const Signup = async () => {\r\n      const user = new Parse.User();\r\n      user.set(\"username\", formState.username);\r\n      user.set(\"password\", formState.password);\r\n\r\n      // other fields can be set just like with Parse.Object\r\n\r\n      try {\r\n        await user.signUp().then(()=>{alert(\"user created\")});\r\n        // Hooray! Let them use the app now.\r\n      } catch (error) {\r\n        // Show the error message somewhere and let the user try again.\r\n        alert(\"Error: \" + error.code + \" \" + error.message);\r\n      }\r\n    };\r\n\r\n    onMounted(() => {});\r\n\r\n    return { formState, Signup };\r\n  }\r\n});\r\n</script>\r\n    "]},"metadata":{},"sourceType":"module"}