{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Sign In\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode();\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"click to signup \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"SignUp\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formState.username1 = $event),\n    placeholder: \"username\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.username1]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.formState.password1 = $event),\n    placeholder: \"password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.formState.password1]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.Signin && _ctx.Signin(...args))\n  }, \"Sign In\"), _hoisted_2, _createElementVNode(\"span\", null, [_hoisted_3, _createElementVNode(\"button\", null, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_hoisted_4]),\n    _: 1\n    /* STABLE */\n\n  })])])])]);\n}","map":{"version":3,"mappings":";;gCAQQA,oBAAc,GAAd,EAAc,IAAd,EAAG,SAAH,EAAU;AAAA;AAAV;;;;iDAI+C;;iDACzB;;;;;uBAV1BC,oBAeM,KAfN,EAeM,IAfN,EAeM,CAXJD,oBASM,KATN,EASM,IATN,EASM,CARJE,UAQI,kBAPJF,oBAA8D,OAA9D,EAA8D;+DAA9CG,eAAUC,YAASC,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA9D;;EAAA,kBAAgBH,eAAUC,YAOtB,kBANJJ,oBAA8D,OAA9D,EAA8D;+DAA9CG,eAAUI,YAASF,OAA2B;IAAzBC,WAAW,EAAC;EAAa,CAA9D;;EAAA,kBAAgBH,eAAUI,YAMtB,EAJJP,oBAAwC,QAAxC,EAAwC;IAA/BQ,OAAK,yCAAEL,mCAAF;EAA0B,CAAxC,EAAwB,SAAxB,CAII,cAJqCH,oBAGzB,MAHyB,EAGzB,IAHyB,EAGzB,aAH+CA,oBAGtD,QAHsD,EAGtD,IAHsD,EAGtD,CAFPS,aAAwCC,sBAAxC,EAAwC;IAA3BC,EAAE,EAAC;EAAwB,CAAxC,EAAmB;sBAAC,MAAM,aAAP;;;;EAAA,CAAnB,CAEO,CAHsD,CAG/C,CAHyB,CAIrC,CATN,CAWI,CAfN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_ctx","username1","$event","placeholder","password1","onClick","_createVNode","_component_router_link","to"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\views\\SignIn.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div>\r\n   \r\n\r\n     \r\n      <div >\r\n        <p>Sign In</p>\r\n        <input v-model=\"formState.username1\" placeholder=\"username\" />\r\n        <input v-model=\"formState.password1\" placeholder=\"password\" />\r\n  \r\n        <button @click=\"Signin\">Sign In</button> <span>click to signup <button>\r\n          <router-link to=\"/\">SignUp</router-link> \r\n    \r\n        </button></span>\r\n      </div>\r\n     \r\n    </div>\r\n  </template>\r\n      \r\n      <script>\r\n  import { defineComponent, reactive, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\n  \r\n  import Parse from \"parse\";\r\n  \r\n  export default defineComponent({\r\n    components: {},\r\n    setup() {\r\n      const router = useRouter()\r\n      const formState = reactive({\r\n        username: \"\",\r\n        password: \"\",\r\n        username1: \"\",\r\n        password1: \"\",\r\n        signup: true,\r\n        signin: true,\r\n        logout: true,\r\n        show: true\r\n      });\r\n  \r\n  \r\n      const Signin = async () => {\r\n  \r\n  \r\n        try {\r\n          await Parse.User.logIn(formState.username1, formState.password1).then(\r\n          () => {\r\n            router.push('/location')\r\n            alert(\"user sign in success\");\r\n        const currentUser = Parse.User.current();\r\n            if(currentUser){\r\n              currentUser.set({\r\n          'logout':false\r\n        })\r\n            }\r\n  \r\n            location.reload();\r\n  \r\n          }\r\n        );\r\n          \r\n        } catch (error) {\r\n          // Show the error message somewhere and let the user try again.\r\n          alert(\"Error: \" + error.code + \" \" + error.message);\r\n        }\r\n      };\r\n    \r\n  \r\n      onMounted(() => {\r\n       \r\n      });\r\n  \r\n      return { formState, Signin };\r\n    }\r\n  });\r\n  </script>\r\n      "]},"metadata":{},"sourceType":"module"}