{"ast":null,"code":"import { defineComponent, reactive, onMounted } from \"vue\"; // import {Loader} from 'google-maps';\n// import { Loader } from '@googlemaps/js-api-loader';\n// import Parse from 'parse'\n\nexport default defineComponent({\n  component: {},\n\n  setup() {\n    const formState = reactive({\n      image: \"\",\n      center: null\n    });\n    onMounted(async () => {\n      // or const {Loader} = require('google-maps'); without typescript\n      // const options: LoaderOptions = {/* todo */};\n      // const loader = new Loader('AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4', {});\n      // const loader = new Loader({\n      //   apiKey: \"AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4\",\n      // });\n      //  await loader.load().then(async(google)=>{\n      //   if (navigator.geolocation) { \n      //         navigator.geolocation.getCurrentPosition(function(position) {  \n      //             console.log(\"position\",position)\n      //           var point = new google.maps.LatLng(position.coords.latitude, \n      //                                              position.coords.longitude);\n      //           // Initialize the Google Maps API v3\n      //           var map = new google.maps.Map(document.getElementById('map'), {\n      //              zoom: 15,\n      //             center: point,\n      //             mapTypeId: google.maps.MapTypeId.ROADMAP\n      //           });\n      //           // Place a marker\n      //           new google.maps.Marker({\n      //             position: point,\n      //             map: map\n      //           });\n      //         }); \n      //       } \n      //       else {\n      //         alert('W3C Geolocation API is not available');\n      //       } \n      //  });\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          console.log(\"position\", position); // var point = new google.maps.LatLng(position.coords.latitude, \n          //                                    position.coords.longitude);\n\n          console.log(position.coords);\n        });\n      } else {\n        alert('W3C Geolocation API is not available');\n      }\n    });\n    return {\n      formState\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAWA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,KAArD,C,CACA;AACA;AAKA;;AAEA,eAAeF,eAAe,CAAC;EAC7BG,SAAS,EAAC,EADmB;;EAM7BC,KAAK,GAAG;IACN,MAAMC,SAAQ,GAAIJ,QAAQ,CAAC;MACzBK,KAAK,EAAE,EADkB;MAEzBC,MAAM,EAAC;IAFkB,CAAD,CAA1B;IAIAL,SAAS,CAAC,YAAY;MAC1B;MAEA;MAEA;MACA;MACA;MAEA;MAEA;MACA;MACA;MACA;MAEA;MACA;MAGA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA,IAAIM,SAAS,CAACC,WAAd,EAA2B;QACnBD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;UACxDC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,QAAvB,EADwD,CAG1D;UACA;;UAEAC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAArB;QAED,CARD;MASF,CAVN,MAWW;QACHC,KAAK,CAAC,sCAAD,CAAL;MACF;IAID,CAxDQ,CAAT;IA0DA,OAAO;MACLV;IADK,CAAP;EAGF;;AAxE6B,CAAD,CAA9B","names":["defineComponent","reactive","onMounted","component","setup","formState","image","center","navigator","geolocation","getCurrentPosition","position","console","log","coords","alert"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\components\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <p>AIzaSyBItZDFpGCcIYt2HxahOQ4XnY8tn2dDn40</p>\n    <p>hello</p>\n    <div id=\"map\"></div>\n\n    <p>nn</p>\n   \n  </div>\n</template>\n<script>\nimport { defineComponent, reactive, onMounted } from \"vue\";\n// import {Loader} from 'google-maps';\n// import { Loader } from '@googlemaps/js-api-loader';\n\n\n\n\n// import Parse from 'parse'\n\nexport default defineComponent({\n  component:{\n   \n\n    \n  },\n  setup() {\n    const formState = reactive({\n      image: \"\",\n      center:null\n    });\n    onMounted(async () => {\n// or const {Loader} = require('google-maps'); without typescript\n \n// const options: LoaderOptions = {/* todo */};\n\n// const loader = new Loader('AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4', {});\n// const loader = new Loader({\n//   apiKey: \"AIzaSyABPywZVGnAsgP8llgiBFnx8sAvUUiRyv4\",\n\n// });\n \n//  await loader.load().then(async(google)=>{\n//   if (navigator.geolocation) { \n//         navigator.geolocation.getCurrentPosition(function(position) {  \n//             console.log(\"position\",position)\n      \n//           var point = new google.maps.LatLng(position.coords.latitude, \n//                                              position.coords.longitude);\n                                             \n      \n//           // Initialize the Google Maps API v3\n//           var map = new google.maps.Map(document.getElementById('map'), {\n//              zoom: 15,\n//             center: point,\n//             mapTypeId: google.maps.MapTypeId.ROADMAP\n//           });\n      \n//           // Place a marker\n//           new google.maps.Marker({\n//             position: point,\n//             map: map\n//           });\n//         }); \n//       } \n//       else {\n//         alert('W3C Geolocation API is not available');\n//       } \n//  });\n\nif (navigator.geolocation) { \n        navigator.geolocation.getCurrentPosition(function(position) {  \n            console.log(\"position\",position)\n      \n          // var point = new google.maps.LatLng(position.coords.latitude, \n          //                                    position.coords.longitude);\n\n          console.log(position.coords)\n        \n        }); \n      } \n      else {\n        alert('W3C Geolocation API is not available');\n      } \n\n\n      \n    });\n\n    return {\n      formState\n    };\n  }\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}