{"ast":null,"code":"import { defineComponent, reactive, onMounted } from \"vue\";\nimport Parse from \"parse\";\nexport default defineComponent({\n  components: {},\n\n  setup() {\n    const formState = reactive({\n      username: \"\",\n      password: \"\",\n      username1: \"\",\n      password1: \"\",\n      signup: true,\n      signin: true,\n      logout: true,\n      show: true\n    });\n\n    const Signin = async () => {\n      try {\n        await Parse.User.logIn(formState.username1, formState.password1).then(() => {\n          alert(\"user sign in success\");\n          const currentUser = Parse.User.current();\n\n          if (currentUser) {\n            currentUser.set({\n              'logout': false\n            });\n          }\n\n          location.reload();\n        });\n      } catch (error) {\n        // Show the error message somewhere and let the user try again.\n        alert(\"Error: \" + error.code + \" \" + error.message);\n      }\n    };\n\n    onMounted(() => {});\n    return {\n      formState,\n      Signin\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAsBE,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,KAArD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAeH,eAAe,CAAC;EAC7BI,UAAU,EAAE,EADiB;;EAE7BC,KAAK,GAAG;IACN,MAAMC,SAAQ,GAAIL,QAAQ,CAAC;MACzBM,QAAQ,EAAE,EADe;MAEzBC,QAAQ,EAAE,EAFe;MAGzBC,SAAS,EAAE,EAHc;MAIzBC,SAAS,EAAE,EAJc;MAKzBC,MAAM,EAAE,IALiB;MAMzBC,MAAM,EAAE,IANiB;MAOzBC,MAAM,EAAE,IAPiB;MAQzBC,IAAI,EAAE;IARmB,CAAD,CAA1B;;IAYA,MAAMC,MAAK,GAAI,YAAY;MAGzB,IAAI;QACF,MAAMZ,KAAK,CAACa,IAAN,CAAWC,KAAX,CAAiBX,SAAS,CAACG,SAA3B,EAAsCH,SAAS,CAACI,SAAhD,EAA2DQ,IAA3D,CACN,MAAM;UACJC,KAAK,CAAC,sBAAD,CAAL;UACJ,MAAMC,WAAU,GAAIjB,KAAK,CAACa,IAAN,CAAWK,OAAX,EAApB;;UACI,IAAGD,WAAH,EAAe;YACbA,WAAW,CAACE,GAAZ,CAAgB;cACpB,UAAS;YADW,CAAhB;UAGF;;UAEAC,QAAQ,CAACC,MAAT;QAEF,CAZM,CAAN;MAeF,CAhBA,CAgBE,OAAOC,KAAP,EAAc;QACd;QACAN,KAAK,CAAC,YAAYM,KAAK,CAACC,IAAlB,GAAyB,GAAzB,GAA+BD,KAAK,CAACE,OAAtC,CAAL;MACF;IACD,CAvBD;;IA0BAzB,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;IAIA,OAAO;MAAEI,SAAF;MAAaS;IAAb,CAAP;EACF;;AA9C6B,CAAD,CAA9B","names":["defineComponent","reactive","onMounted","Parse","components","setup","formState","username","password","username1","password1","signup","signin","logout","show","Signin","User","logIn","then","alert","currentUser","current","set","location","reload","error","code","message"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\parse\\src\\views\\SignIn.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div>\r\n   \r\n\r\n     \r\n      <div >\r\n        <p>Sign In</p>\r\n        <input v-model=\"formState.username1\" placeholder=\"username\" />\r\n        <input v-model=\"formState.password1\" placeholder=\"password\" />\r\n  \r\n        <button @click=\"Signin\">Sign In</button> <span>click to signup <button>\r\n          <router-link to=\"/\">SignUp</router-link> \r\n    \r\n        </button></span>\r\n      </div>\r\n     \r\n    </div>\r\n  </template>\r\n      \r\n      <script>\r\n  import { defineComponent, reactive, onMounted } from \"vue\";\r\n  \r\n  import Parse from \"parse\";\r\n  \r\n  export default defineComponent({\r\n    components: {},\r\n    setup() {\r\n      const formState = reactive({\r\n        username: \"\",\r\n        password: \"\",\r\n        username1: \"\",\r\n        password1: \"\",\r\n        signup: true,\r\n        signin: true,\r\n        logout: true,\r\n        show: true\r\n      });\r\n  \r\n  \r\n      const Signin = async () => {\r\n  \r\n  \r\n        try {\r\n          await Parse.User.logIn(formState.username1, formState.password1).then(\r\n          () => {\r\n            alert(\"user sign in success\");\r\n        const currentUser = Parse.User.current();\r\n            if(currentUser){\r\n              currentUser.set({\r\n          'logout':false\r\n        })\r\n            }\r\n  \r\n            location.reload();\r\n  \r\n          }\r\n        );\r\n          \r\n        } catch (error) {\r\n          // Show the error message somewhere and let the user try again.\r\n          alert(\"Error: \" + error.code + \" \" + error.message);\r\n        }\r\n      };\r\n    \r\n  \r\n      onMounted(() => {\r\n       \r\n      });\r\n  \r\n      return { formState, Signin };\r\n    }\r\n  });\r\n  </script>\r\n      "]},"metadata":{},"sourceType":"module"}